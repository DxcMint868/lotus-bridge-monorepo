export const en = {
	// Common
	common: {
		loading: "Loading...",
		error: "Error",
		success: "Success",
		cancel: "Cancel",
		confirm: "Confirm",
		back: "Back",
		next: "Next",
		close: "Close",
		copy: "Copy",
		copied: "Copied",
		viewOnExplorer: "View on Explorer",
		connectWallet: "Connect Wallet",
		disconnect: "Disconnect",
		network: "Network",
		balance: "Balance",
		amount: "Amount",
		address: "Address",
		transaction: "Transaction",
		fee: "Fee",
		total: "Total",
		available: "Available",
		processing: "Processing",
		completed: "Completed",
		failed: "Failed",
		pending: "Pending",
	},

	// Header
	header: {
		bridge: "Bridge",
		subtitle: "vietnamese Omnichain	Bridge",
		transactions: "Transactions",
		pools: "Pools",
		docs: "Docs",
	},

	selector: {
		selectSourceAsset: "Select Source Asset",
		selectTargetAsset: "Select Target Asset",
		selectNetwork: "Select Network",
		selectAsset: "Select Asset",
		searchAsset: "Search Asset",
		selectToken: "Select Token",
		network: "Network",
		chooseNetworkAndToken: "Choose network and asset",
		selectNetworkFirst: "Select a network first",
		chooseNetworkToSeeTokens: "Choose a network to see available assets",
		vietnameseTokens: "Vietnamese Assets",
		priority: "Priority",
		otherTokens: "Other Assets",
		selected: "Selected",
		noTokensFound: "No assets found",
		tryDifferentSearch: "Try a different search term",
		viewMoreNetworks: "View More Networks",
		showLess: "Show Less",
	},

	// Bridge Interface
	bridge: {
		title: "Bridge Assets",
		subtitle:
			"Seamlessly bridge your assets across multiple blockchains with Vietnamese cultural elegance and cutting-edge DeFi technology.",
		selectNetworksAndTokens:
			"Select networks and tokens to bridge between different blockchains",
		bridgeAssets: "Bridge Assets",
		from: "From",
		to: "To",
		amount: "Amount",
		recipient: "Recipient",
		youWillReceive: "You will receive",
		sendToConnectedWallet: "Send to connected wallet",
		enterRecipientAddress: "Enter recipient address",
		enterAmount: "Enter amount",
		selectToken: "Select token",
		selectNetwork: "Select network",
		nativeToken: "Native Token",
		nativeTokenDescription: "The blockchain's native currency",
		vietnameseTokens: "Vietnamese Tokens",
		otherTokens: "Other Tokens",
		recommended: "Recommended",
		bridgeTokens: "Bridge Tokens",
		approveTokenFirst: "Approve Token First",
		approvingToken: "Approving...",
		bridging: "Bridging...",
		enterValidAmount: "Enter Valid Amount",
		connectWalletToBridge: "Connect Wallet to Bridge",
		insufficientBalance: "Insufficient balance",
		amountAfterFee:
			"Amount after bridge fee: {{amount}} - {{fee}} = {{result}}",
		approveTokenForBridge: "Approve {{token}} for Bridge",
		sourceNetwork: "Source Network",
		sourceToken: "Source Token",
		targetNetwork: "Target Network",
		targetToken: "Target Token",
		balance: "Balance",
		loading: "Loading...",
		checkingAllowance: "Checking Allowance...",
		minimumAmountRequired: "Minimum amount required: {{amount}} {{token}}",
		meetsMinimumAmount:
			"Amount meets minimum requirement ({{amount}} {{token}})",
		loadingMinimumAmount: "Loading minimum amount...",
		selectFromWallet: "Select from wallet",
		selectAccount: "Select account",
		loadingAccounts: "Loading...",
		noAccountsFound: "No accounts",
		connected: "Connected",
		selected: "Selected",
		availableAccounts: "Available accounts",
		noAccountsAvailable: "No accounts available",
	},

	// Transaction History
	transaction: {
		history: "Transaction History",
		historyDescription: "Track your bridge and approval transactions",
		all: "All",
		pending: "Pending",
		completed: "Completed",
		failed: "Failed",
		approval: "Approval",
		connectWalletToSee: "Connect your wallet to see transaction history",
		noTransactions: "No {{filter}} transactions found",
		justNow: "Just now",
		minutesAgo: "{{minutes}}m ago",
		hoursAgo: "{{hours}}h ago",
		daysAgo: "{{days}}d ago",
		fee: "Fee",
		approvalFor: "Approval for {{token}}",
		to: "To",
		view: "View",
	},

	// Transaction Details
	transactionDetails: {
		title: "Transaction Details",
		bridgeType: "Bridge Type",
		lockReleaseBridge: "Lock/Release Bridge",
		bridgeFee: "Bridge Fee",
		amountAfterFee: "Amount After Fee",
		estimatedGas: "Estimated Gas",
		processingTime: "Processing Time",
		transactionId: "Transaction ID",
		poolLiquidity: "Pool Liquidity",
		ofPool: "{{percent}}% of pool",
		youllReceive: "You'll Receive",
		bridgeRoute: "Bridge Route",
		lockReleasePool: "Lock/Release Pool",
		enterAmountToSeeDetails: "Enter an amount to see transaction details",
		fast: "Fast",
		minutes: "{{min}} min",
	},

	// Bridge Fees and Pool Stats
	fees: {
		fixedBridgeFee: "Fixed Bridge Fee",
		lockReleaseInfo:
			"Lock/Release bridge uses fixed fees for predictable costs",
		poolStatus: "Pool Status",
		totalBalance: "Total Balance",
		locked: "Locked",
		feesCollected: "Fees Collected",
		checkingAllowance: "Checking Allowance...",
		poolStatsLoading: "Pool Stats Loading",
	},

	// Messages and Notifications
	messages: {
		approvalSuccessful: "Approval Successful!",
		approvalFailed: "Approval Failed",
		bridgeSuccessful: "Bridge Successful!",
		bridgeFailed: "Bridge Failed",
		pleaseConnectWallet: "Please connect your wallet first",
		pleaseApproveToken: "Please approve the token first",
		transactionPending: "Transaction pending...",
		transactionConfirmed: "Transaction confirmed",
		invalidRecipientAddress: "Invalid recipient address",
		amountTooLarge: "Amount exceeds balance",
		networkMismatch: "Please switch to the correct network",
	},

	// Advanced Options
	advanced: {
		title: "Advanced Options",
		slippageTolerance: "Slippage Tolerance",
		customRecipient: "Custom Recipient",
		gasSettings: "Gas Settings",
		standard: "Standard",
		fast: "Fast",
		instant: "Instant",
	},

	// Wallet Connection
	wallet: {
		connectWallet: "Connect Wallet",
		connecting: "Connecting...",
		connected: "Connected",
		disconnected: "Disconnected",
		wrongNetwork: "Wrong Network",
		switchNetwork: "Switch Network",
		accountAddress: "Account Address",
		walletBalance: "Wallet Balance",
		copyAddress: "Copy Address",
		addressCopied: "Address copied to clipboard",
		status: "Wallet Status",
		connectToSeeInfo: "Connect your wallet to see blockchain information",
		connectionStatus: "Status",
		address: "Address",
		network: "Network",
		balance: "Balance",
		refreshBalance: "Refresh Balance",
	},

	// Token Selector
	tokens: {
		selectToken: "Select Token",
		searchTokens: "Search tokens",
		popularTokens: "Popular Tokens",
		allTokens: "All Tokens",
		tokenNotFound: "Token not found",
		customToken: "Custom Token",
		addCustomToken: "Add Custom Token",
		tokenAddress: "Token Address",
		tokenSymbol: "Token Symbol",
		tokenDecimals: "Token Decimals",
	},

	// Network Selector
	networks: {
		selectNetwork: "Select Network",
		mainnet: "Mainnet",
		testnet: "Testnet",
		ethereum: "Ethereum",
		base: "Base",
		polygon: "Polygon",
		optimism: "Optimism",
		arbitrum: "Arbitrum",
		switchToNetwork: "Switch to {{network}}",
	},

	// Transaction History
	history: {
		title: "Transaction History",
		noTransactions: "No transactions found",
		viewAll: "View All",
		recent: "Recent",
		pending: "Pending",
		completed: "Completed",
		failed: "Failed",
		bridgeFrom: "Bridge from {{from}} to {{to}}",
		amount: "{{amount}} {{token}}",
		hash: "Hash",
		status: "Status",
		time: "Time",
		refresh: "Refresh",
	},

	// Footer
	footer: {
		poweredBy: "Powered by Lotus Bridge",
		version: "Version {{version}}",
		documentation: "Documentation",
		support: "Support",
		terms: "Terms of Service",
		privacy: "Privacy Policy",
		community: "Community",
	},

	// Errors
	errors: {
		networkError: "Network error occurred",
		contractError: "Contract error",
		userRejected: "User rejected transaction",
		insufficientGas: "Insufficient gas",
		transactionFailed: "Transaction failed",
		invalidAddress: "Invalid address",
		invalidAmount: "Invalid amount",
		tokenNotSupported: "Token not supported",
		bridgeNotAvailable: "Bridge not available",
		liquidityInsufficient: "Insufficient liquidity",
		unknown: "Unknown error occurred",
	},

	// Debug Info
	debug: {
		validParams: "Valid Params",
		needsApproval: "Needs Approval",
		allowanceLoading: "Allowance Loading",
		poolStatsLoading: "Pool Stats Loading",
		transactionId: "Transaction ID",
		bridgeFee: "Bridge Fee",
		notGenerated: "Not generated",
		notCalculated: "Not calculated",
		yes: "Yes",
		no: "No",
	},
} as const;

export type TranslationKeys = typeof en;
